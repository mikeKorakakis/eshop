/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getCategoryList
         * @description Get all Categories
         */
        get: operations["21d96dfbc80636958752fc33a26c8433"];
        put?: never;
        /**
         * createCategory
         * @description Create Category
         */
        post: operations["3b780d462171922a63ed1b955c8ddff4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/categories/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getCategoryItem
         * @description Get Category
         */
        get: operations["c3e0e260a52e021112641c313563209d"];
        /**
         * updateCategory
         * @description Update Category
         */
        put: operations["32718f26775bcb9041c1b14c05f98329"];
        post?: never;
        /**
         * deleteCategory
         * @description Delete Category
         */
        delete: operations["5533ad6fc90bab3f42f017feadfad8aa"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/comments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getCommentList
         * @description Get all Comments
         */
        get: operations["60c2516e7f4c01183e8b898f254a28d2"];
        put?: never;
        /**
         * createComment
         * @description Create Comment
         */
        post: operations["2df37255c7b8a7e599d3c03743a26918"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/comments/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getCommentItem
         * @description Get Comment
         */
        get: operations["c0d2cb33ba321b85baff25141a323c91"];
        /**
         * updateComment
         * @description Update Comment
         */
        put: operations["916f5b9ad1b77b30b946aa7f7ce3a454"];
        post?: never;
        /**
         * deleteComment
         * @description Delete Comment
         */
        delete: operations["5bc074250b721abdab14f90ce60b80b4"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit-cards": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getCreditCardList
         * @description Get all CreditCards
         */
        get: operations["237c0bfdf6092acf25f08761cfbe1602"];
        put?: never;
        /**
         * createCreditCard
         * @description Create CreditCard
         */
        post: operations["b2a0f322a397b706a231709840da7f2b"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit-cards/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getCreditCardItem
         * @description Get CreditCard
         */
        get: operations["c0601dd20ce0e2f7748d285544517c72"];
        /**
         * updateCreditCard
         * @description Update CreditCard
         */
        put: operations["90dab335014a0dde7daaf8f78ebf672d"];
        post?: never;
        /**
         * deleteCreditCard
         * @description Delete CreditCard
         */
        delete: operations["9a695a3467161c781d331791a3789662"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getItemList
         * @description Get all Items
         */
        get: operations["903a129b448a6d048872ed19f0cd2416"];
        put?: never;
        /**
         * createItem
         * @description Create Item
         */
        post: operations["5db62a1456c5428981dccc082b52c734"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/items/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getItemItem
         * @description Get Item
         */
        get: operations["9eb823d8efd63b3de273c920f7a42a35"];
        /**
         * updateItem
         * @description Update Item
         */
        put: operations["a7b3ebb3f8ba639c8460970055f64b7c"];
        post?: never;
        /**
         * deleteItem
         * @description Delete Item
         */
        delete: operations["aecdd4fc05d1086d67ea34f9fdeeaa8a"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getOrderList
         * @description Get all Orders
         */
        get: operations["fb21745d6840c15cfa15f1a5ac9f7089"];
        put?: never;
        /**
         * createOrder
         * @description Create Order
         */
        post: operations["8251788a6fc19fc50524a2dff59e801b"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getOrderItem
         * @description Get Order
         */
        get: operations["8e3ad4da49bf0c6d2dbc0132f4bbf245"];
        /**
         * updateOrder
         * @description Update Order
         */
        put: operations["19c4661d9a7eef28174f9646481983d3"];
        post?: never;
        /**
         * deleteOrder
         * @description Delete Order
         */
        delete: operations["fafc3aa6f4a00ca437632dfef32f2cde"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order-items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getOrderItemList
         * @description Get all OrderItems
         */
        get: operations["0fdb98fdb5ca0daa1bdebfea446aaa18"];
        put?: never;
        /**
         * createOrderItem
         * @description Create OrderItem
         */
        post: operations["7e765b73ca60025b512b08effcc28375"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order-items/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getOrderItemItem
         * @description Get OrderItem
         */
        get: operations["10ef09dd7e6f470f5b4e50f7950496d2"];
        /**
         * updateOrderItem
         * @description Update OrderItem
         */
        put: operations["74b59db1d922106dfc2d509c01c6e744"];
        post?: never;
        /**
         * deleteOrderItem
         * @description Delete OrderItem
         */
        delete: operations["358d3fa86ffd2c83084f378054310f83"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getProductList
         * @description Get all Products
         */
        get: operations["15732299bdeddbb6ee6b7c56ebf56307"];
        put?: never;
        /**
         * createProduct
         * @description Create Product
         */
        post: operations["974b923a4f56c1e533f63ca9eb78d4a2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getProductItem
         * @description Get Product
         */
        get: operations["1d8e204f0a2534afcaefad51649010dc"];
        /**
         * updateProduct
         * @description Update Product
         */
        put: operations["c5e383dccdf04d9ccb04ffcdad51ee75"];
        post?: never;
        /**
         * deleteProduct
         * @description Delete Product
         */
        delete: operations["2968e65018acc4a4d7877ed2321c73c2"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getUserList
         * @description Get all Users
         */
        get: operations["1df092f5eddb2e29c3c5aa8043dd6d44"];
        put?: never;
        /**
         * createUser
         * @description Create User
         */
        post: operations["3465c05467f56755d8fde6dfe336f784"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getUserItem
         * @description Get User
         */
        get: operations["ca775ff26d0144e4b01abbd8c926f7c3"];
        /**
         * updateUser
         * @description Update User
         */
        put: operations["acefdff5c10ad10456b5e12506f8ab63"];
        post?: never;
        /**
         * deleteUser
         * @description Delete User
         */
        delete: operations["b3671c968c691df9358298f3a285c767"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Category: {
            /** @description Category ID */
            category_id?: number;
            /** @description Parent category ID */
            parent_id?: number | null;
            /** @description Category ordering */
            ordering?: number | null;
            /** @description Category name */
            name: string;
            /** @description Category description */
            description: string;
        };
        Comment: {
            /** @description Comment text */
            content: string;
            /** @description Comment ID */
            comment_id?: number;
            /** @description Product ID */
            product_id: number;
            /** @description User ID */
            user_id: number;
            /**
             * Format: date
             * @description Date comment was created
             */
            created_date: string;
        };
        CreditCard: {
            /** @description 16-digit card number */
            card_number: string;
            /** @description Credit card ID */
            credit_card_id?: number;
            /** @description User ID */
            user_id: number;
            /** @description Name on the card */
            cardholder_name: string;
            /**
             * Format: date
             * @description Expiration date of card
             */
            expiration_date: string;
            /** @description 3-digit CVV */
            cvv: string;
            /**
             * Format: number
             * @description Available balance
             */
            balance: number;
        };
        Item: {
            /** @description ID of the item */
            readonly item_id?: number;
            /** @description Name of the item */
            name: string;
            /** @description Description of the item */
            description: string;
            /**
             * Format: number
             * @description Price of the item
             */
            price: number;
            /**
             * Format: date
             * @description Date item was added
             */
            added_date: string;
            /** @description Country where item was made */
            country_of_origin: string;
            /** @description Status (e.g., Available, Sold) */
            status: string;
            /** @description Approval status */
            is_approved: boolean;
            /** @description URL to item image */
            image_url: string;
            /** @description Contact information */
            contact_info: string;
        };
        Order: {
            /**
             * Format: date-time
             * @description Date and time the order was placed
             */
            order_date: string;
            /** @description Order ID */
            order_id?: number;
            /** @description User ID */
            user_id: number;
            /**
             * Format: number
             * @description Total amount for the order
             */
            total_amount: number;
            /** @description Order status */
            order_status: string;
        };
        OrderItem: {
            /** @description Order item ID */
            order_item_id?: number;
            /** @description Order ID */
            order_id: number;
            /** @description Product ID */
            product_id: number;
            /** @description Quantity of product */
            quantity: number;
            /**
             * Format: number
             * @description Price at the time of purchase
             */
            price_at_purchase: number;
        };
        Product: {
            /** @description Product ID */
            product_id?: number;
            /** @description Category ID */
            category_id: number;
            /** @description Owner ID */
            owner_id: number;
            /** @description Name of the product */
            name: string;
            /** @description Description of the product */
            description: string;
            /**
             * Format: number
             * @description Price of the product
             */
            price: number;
            /**
             * Format: date
             * @description Date product was added
             */
            added_date?: string;
            /** @description Country where product was made */
            country_of_origin: string;
            /** @description URL to product image */
            image_url: string;
        };
        User: {
            /** @description User ID */
            user_id?: number;
            /** @description Group ID */
            group_id: number;
            /** @description Username for login */
            username: string;
            /** @description Hashed password */
            password?: string;
            /** @description User email */
            email: string;
            /** @description Full name of user */
            full_name: string;
            /**
             * Format: date
             * @description Date of registration
             */
            registration_date?: string;
            /** @description URL to avatar image */
            avatar_url: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "21d96dfbc80636958752fc33a26c8433": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Category"][];
                        message?: string;
                    };
                };
            };
        };
    };
    "3b780d462171922a63ed1b955c8ddff4": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Category"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Category"];
                        message?: string;
                    };
                };
            };
        };
    };
    c3e0e260a52e021112641c313563209d: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Category */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Category"];
                        message?: string;
                    };
                };
            };
        };
    };
    "32718f26775bcb9041c1b14c05f98329": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Category */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Category"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Category"];
                        message?: string;
                    };
                };
            };
        };
    };
    "5533ad6fc90bab3f42f017feadfad8aa": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Category */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: string;
                        message?: string;
                    };
                };
            };
        };
    };
    "60c2516e7f4c01183e8b898f254a28d2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Comment"][];
                        message?: string;
                    };
                };
            };
        };
    };
    "2df37255c7b8a7e599d3c03743a26918": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Comment"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Comment"];
                        message?: string;
                    };
                };
            };
        };
    };
    c0d2cb33ba321b85baff25141a323c91: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Comment */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Comment"];
                        message?: string;
                    };
                };
            };
        };
    };
    "916f5b9ad1b77b30b946aa7f7ce3a454": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Comment */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Comment"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Comment"];
                        message?: string;
                    };
                };
            };
        };
    };
    "5bc074250b721abdab14f90ce60b80b4": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Comment */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: string;
                        message?: string;
                    };
                };
            };
        };
    };
    "237c0bfdf6092acf25f08761cfbe1602": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["CreditCard"][];
                        message?: string;
                    };
                };
            };
        };
    };
    b2a0f322a397b706a231709840da7f2b: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreditCard"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["CreditCard"];
                        message?: string;
                    };
                };
            };
        };
    };
    c0601dd20ce0e2f7748d285544517c72: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of CreditCard */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["CreditCard"];
                        message?: string;
                    };
                };
            };
        };
    };
    "90dab335014a0dde7daaf8f78ebf672d": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of CreditCard */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreditCard"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["CreditCard"];
                        message?: string;
                    };
                };
            };
        };
    };
    "9a695a3467161c781d331791a3789662": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of CreditCard */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: string;
                        message?: string;
                    };
                };
            };
        };
    };
    "903a129b448a6d048872ed19f0cd2416": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Item"][];
                        message?: string;
                    };
                };
            };
        };
    };
    "5db62a1456c5428981dccc082b52c734": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Item"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Item"];
                        message?: string;
                    };
                };
            };
        };
    };
    "9eb823d8efd63b3de273c920f7a42a35": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Item */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Item"];
                        message?: string;
                    };
                };
            };
        };
    };
    a7b3ebb3f8ba639c8460970055f64b7c: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Item */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Item"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Item"];
                        message?: string;
                    };
                };
            };
        };
    };
    aecdd4fc05d1086d67ea34f9fdeeaa8a: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Item */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: string;
                        message?: string;
                    };
                };
            };
        };
    };
    fb21745d6840c15cfa15f1a5ac9f7089: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Order"][];
                        message?: string;
                    };
                };
            };
        };
    };
    "8251788a6fc19fc50524a2dff59e801b": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Order"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Order"];
                        message?: string;
                    };
                };
            };
        };
    };
    "8e3ad4da49bf0c6d2dbc0132f4bbf245": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Order */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Order"];
                        message?: string;
                    };
                };
            };
        };
    };
    "19c4661d9a7eef28174f9646481983d3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Order */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Order"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Order"];
                        message?: string;
                    };
                };
            };
        };
    };
    fafc3aa6f4a00ca437632dfef32f2cde: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Order */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: string;
                        message?: string;
                    };
                };
            };
        };
    };
    "0fdb98fdb5ca0daa1bdebfea446aaa18": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["OrderItem"][];
                        message?: string;
                    };
                };
            };
        };
    };
    "7e765b73ca60025b512b08effcc28375": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderItem"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["OrderItem"];
                        message?: string;
                    };
                };
            };
        };
    };
    "10ef09dd7e6f470f5b4e50f7950496d2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of OrderItem */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["OrderItem"];
                        message?: string;
                    };
                };
            };
        };
    };
    "74b59db1d922106dfc2d509c01c6e744": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of OrderItem */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderItem"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["OrderItem"];
                        message?: string;
                    };
                };
            };
        };
    };
    "358d3fa86ffd2c83084f378054310f83": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of OrderItem */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: string;
                        message?: string;
                    };
                };
            };
        };
    };
    "15732299bdeddbb6ee6b7c56ebf56307": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Product"][];
                        message?: string;
                    };
                };
            };
        };
    };
    "974b923a4f56c1e533f63ca9eb78d4a2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Product"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Product"];
                        message?: string;
                    };
                };
            };
        };
    };
    "1d8e204f0a2534afcaefad51649010dc": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Product */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Product"];
                        message?: string;
                    };
                };
            };
        };
    };
    c5e383dccdf04d9ccb04ffcdad51ee75: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Product */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Product"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["Product"];
                        message?: string;
                    };
                };
            };
        };
    };
    "2968e65018acc4a4d7877ed2321c73c2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of Product */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: string;
                        message?: string;
                    };
                };
            };
        };
    };
    "1df092f5eddb2e29c3c5aa8043dd6d44": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["User"][];
                        message?: string;
                    };
                };
            };
        };
    };
    "3465c05467f56755d8fde6dfe336f784": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["User"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["User"];
                        message?: string;
                    };
                };
            };
        };
    };
    ca775ff26d0144e4b01abbd8c926f7c3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of User */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["User"];
                        message?: string;
                    };
                };
            };
        };
    };
    acefdff5c10ad10456b5e12506f8ab63: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of User */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["User"];
            };
        };
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: components["schemas"]["User"];
                        message?: string;
                    };
                };
            };
        };
    };
    b3671c968c691df9358298f3a285c767: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description id of User */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: string;
                        message?: string;
                    };
                };
            };
        };
    };
}
