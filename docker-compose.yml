services:
  client:
    container_name: client
    build: 
      context: ./new/shop-client
      dockerfile: Dockerfile
    environment:
      VIRTUAL_HOST: new-shop.mscacs.info
      LETSENCRYPT_HOST: new-shop.mscacs.info
      LETSENCRYPT_EMAIL: mike.korakakis@gmail.com
    ports:
      - 3000:3000
    restart: unless-stopped

  api:
    build:
      context: ./new/shop-api
      dockerfile: Dockerfile
    container_name: api
    volumes:
      - ./new/shop-api/storage:/var/www/html/storage # Only map the storage directory
      - ./new/shop-api/bootstrap/cache:/var/www/html/bootstrap/cache # Optional for cache
    depends_on:
      - db

  webserver:
    image: nginx:alpine
    container_name: webserver
    volumes:
      - .:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      VIRTUAL_HOST: new-api.mscacs.info
      LETSENCRYPT_HOST: new-api.mscacs.info
      LETSENCRYPT_EMAIL: mike.korakakis@gmail.com
    ports:
      - "8000:80"
    depends_on:
      - api


  web:
    image: php:8.1-apache
    container_name: apache_server
    ports:
      - "8080:80" 
    volumes:
      - ./old:/var/www/html 
    environment:
      MINIO_URL: https://minio.mscacs.info
      NEW_SHOP_URL: https://new-shop.mscacs.info
      VIRTUAL_HOST: old-shop.mscacs.info
      LETSENCRYPT_HOST: old-shop.mscacs.info
      LETSENCRYPT_EMAIL: mike.korakakis@gmail.com
    command: /bin/bash -c "apt-get update && apt-get install -y libpq-dev libzip-dev unzip && docker-php-ext-install pdo pdo_mysql && apache2-foreground"
    depends_on:
      - db 

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: eshop_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: rootpassword
      VIRTUAL_HOST: phpadmin.mscacs.info
      LETSENCRYPT_HOST: phpadmin.mscacs.info
      LETSENCRYPT_EMAIL: mike.korakakis@gmail.com
    ports:
      - "8081:80"
    depends_on:
      - db


  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" # MinIO Console/API
      # - "9001:9001" # MinIO Admin Console
    environment:
      MINIO_ROOT_USER: "admin"       # Set your MinIO access key
      MINIO_ROOT_PASSWORD: "admin123"   # Set your MinIO secret key
      VIRTUAL_HOST: minio.mscacs.info
      LETSENCRYPT_HOST: minio.mscacs.info
      LETSENCRYPT_EMAIL: mike.korakakis@gmail.com
    volumes:
      - minio-data:/data                      # Persistent storage for MinIO data
    command: server /data --console-address ":9001" # Enable Admin Console on port 9001

  create-bucket:
    image: minio/mc:latest
    environment:
      MC_HOST_minio: http://admin:admin123@minio:9000
    entrypoint:
      - sh
      - -c
      - |
        until mc ls minio > /dev/null 2>&1; do
          sleep 0.5
        done
        mc mb minio/shop
        mc anonymous set public minio/shop
    depends_on:
      - minio

  proxy:
    image: jwilder/nginx-proxy
    container_name: proxy
    restart: unless-stopped
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
#      - docker_sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:rw
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    ports:
      - "80:80"
      - "443:443"


  proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: unless-stopped
    environment:
      NGINX_PROXY_CONTAINER: proxy
    volumes:
      - html:/usr/share/nginx/html
      - vhost.d:/etc/nginx/vhost.d
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - /var/run/docker.sock:/tmp/docker.sock:ro 
#     - docker_sock:/var/run/docker.sock:ro
    depends_on:
      - "proxy"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"


volumes:
  db_data:
  minio-data:

  certs:
  vhost.d:
  html:
  portainer:


